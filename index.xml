<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hadooboo Dev Log</title>
    <link>https://hadooboo.github.io/</link>
    <description>Recent content on Hadooboo Dev Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 31 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://hadooboo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>202207 | Testflight와 심사</title>
      <link>https://hadooboo.github.io/posts/mils/202207/</link>
      <pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202207/</guid>
      <description>지금 회사에 들어온 지 이제 1년 정도가 넘었다. 그동안 여러 프로토타입을 만들어 보았지만 기존에 제공하고 있던 서비스를 유지보수한 것을 제외하고는 실제 사용자에게 서비스가 전달된 적은 없었다. 이 점이 항상 아쉬운 요소였는데 공학을 한다는 것은 사람들에게 서비스를 전달하기 위한 것이며 사용자의 피드백을 받아 수정하면서 발전할 때 더 나은 서비스를 만들 수 있는 개발자로 성장할 것이라고 생각하기 때문이다. 그런데 이번 달 처음으로 지금까지 만든 아이폰 앱에 대한 심사 요청을 보냈다. 아직까지 앱스토어에 출시되진 않았지만 정말 큰 발걸음을 뗐다고 생각한다.</description>
    </item>
    
    <item>
      <title>202206 | iOS SDK</title>
      <link>https://hadooboo.github.io/posts/mils/202206/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202206/</guid>
      <description>저번 달에 만들었던 Asterisk 서버를 이용하는 아이폰 앱을 만드는 것이 이번 달 주요 업무였다. 아이폰 앱은 또 처음이었다. 3월에 안드로이드 앱을 만들 때 고생했던 것을 생각하면 시작할 때 걱정이 되었던 것은 사실이다. 그런데 새롭게 마주한 swift라는 언어와 xcode라는 개발 환경에서도 느끼고 배운 점들이 더러 있었다.
swift에서 가장 흥미로웠던 것은 extension이라는 기능이었다. extension을 사용하면 이미 존재하는 클래스를 확장시켜 새로운 메소드를 추가할 수 있다. 우리가 정의한 클래스 뿐만 아니라 기존에 존재하는 라이브러리의 클래스도 확장 가능하다.</description>
    </item>
    
    <item>
      <title>202205 | Asterisk와 새로운 프로토콜</title>
      <link>https://hadooboo.github.io/posts/mils/202205/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202205/</guid>
      <description>이번 달에는 사설 전화 네트워크(PBX)의 대표적인 오픈 소스 소프트웨어인 Asterisk를 사용하여 통화 연결 관련된 업무를 하였다. 살아가면서 ARS를 많이 사용해보긴 했지만 어떻게 작동할지는 상상해 본 적도 없었고 내가 그것을 구현하게 될지는 더더욱 상상도 못했다. 현재 대부분의 서비스 플랫폼은 웹 또는 앱 서비스 기반이라고 생각하는데 개발이라고 했을 때 나도 모르게 전형적인 서버 클라이언트 모델에만 초점을 맞췄던 것 같다.
가장 신기했던 것은 지금까지는 들어보지도 못했던 SIP, RTP 등의 프로토콜들이었다. 먼저 SIP는 통화의 개시와 종료 등의 메타 정보를 위해 사용되는 프로토콜이다.</description>
    </item>
    
    <item>
      <title>202204 | CRUD 작업에서 의미 찾기: DDD</title>
      <link>https://hadooboo.github.io/posts/mils/202204/</link>
      <pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202204/</guid>
      <description>이번 달 역시 새로운 프로토타입을 만드는 업무를 진행하였다. 그런데 이번에는 정말 게시판의 확장 버전이었다. 다른 복잡한 알고리즘이나 모델 없이 글을 올리고 그에 대한 몇 가지 기능만 있으면 되는 간단한 수준이었다. 이런 방향으로 프로토타입 개발 방향이 잡히자 이번 작업을 통해 배울 수 있는 점이 있을지 바로 고민이 시작되었다. 단순한 sql 명령어를 실행하는 데이터베이스 레이어와 데이터베이스 테이블 구조과 비슷하게 생긴 API 요청 및 응답을 처리하는 API 서버 레이어. 기존 작업들과 아이템만 다를 뿐 별반 차이점이 없을 뿐더러 복사 붙여넣기만 하게 되지 싶었다.</description>
    </item>
    
    <item>
      <title>202203 | 안드로이드 SDK</title>
      <link>https://hadooboo.github.io/posts/mils/202203/</link>
      <pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202203/</guid>
      <description>이번 달 주 업무는 녹음 기능을 메인으로 하는 안드로이드 네이티브 앱을 만드는 작업이었다. 기존까지는 프로토타입 앱 클라이언트를 만들어야 할 때 flutter를 사용하여 안드로이드와 iOS 멀티플랫폼 빌드가 가능하도록 했었다. 그러나 녹음과 같이 하드웨어와 밀접하게 연관된 기능을 갖는 경우에는 flutter의 한계가 명확했고 결국에는 안드로이드 SDK를 직접 익혀서 할 수밖에 없었다.
하드웨어와 연관된 작업이다 보니 테스트 과정이 많이 힘들었다. 기능이 동작하는 것을 확인하려면 에뮬레이터에서 해 보는 것이 불가능하고 실제 앱을 테스트 기기에서 빌드해서 동작하는지 확인해보아야 했다.</description>
    </item>
    
    <item>
      <title>202202 | legacy 코드 다루기</title>
      <link>https://hadooboo.github.io/posts/mils/202202/</link>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202202/</guid>
      <description>이번 달 업무는 우리 팀이 2~3년 전에 만들어 두었던 서비스에다가 기능을 추가하는 작업이었다. 해당 서비스는 외부로 제공 중이었으며 사람들이 이미 사용하고 있었기에 신중한 업데이트가 필요했다. 그러나 가장 큰 문제는 서비스가 개발될 때 팀에서 근무했던 사원이 아무도 없어서 코드를 직접 보고 어떤 방향으로 구현했는지 직접 확인해야 한다는 것이었다. 말로만 듣던 legacy 코드 분석을 실제로 처음 경험해보는 순간이었다.
코드를 보면서 가장 크게 느낀 차이점은 모든 데이터 전달용 구조체를 types 패키지에 넣고 사용하는 방법이었다.</description>
    </item>
    
    <item>
      <title>202201 | 프론트엔드 경험에 대하여</title>
      <link>https://hadooboo.github.io/posts/mils/202201/</link>
      <pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202201/</guid>
      <description>나는 백엔드 개발자다. 동시에 데이터에도 관심이 많아 데이터 엔지니어, 데이터 사이언티스트도 꿈꾸고 있다. 그런데 회사에서 항상 백엔드 업무만 할 수는 없었다. 백엔드 프론트엔드 동시 작업은 어렵다 보니 백엔드 API 서버를 전부 구현하고 프론트엔드 웹 클라이언트를 구현할 때 결국에는 같이 참여하게 되기 때문이었다. 또한, 팀원 구성도 백엔드 2명, 프론트엔드 1명이다보니 더욱 더 그럴 수밖에 없었다.
이런 상황 속에서 가장 고민이 되는 것은 프론트엔드에 대해 지금 내가 배우고 하고 있는 것이 앞으로 내 커리어에 도움이 될까하는 것이다.</description>
    </item>
    
    <item>
      <title>202112 | 좋은 개발 문화</title>
      <link>https://hadooboo.github.io/posts/mils/202112/</link>
      <pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202112/</guid>
      <description>회사에 들어오고 난 뒤 처음으로 연말이 찾아왔고, 올 한 해 동안의 회사에서의 업무를 되돌아보기 좋은 시간이었다. 또한, 회사 생활에 점차 적응해나가니 우리 팀에서 부족한 점이 하나 둘 보이기 시작하였다. 가장 필요하면서 되지 않고 있다고 느낀 것은 협업에 대한 문제였다.
첫 번째 협업에서의 문제는 프론트엔드와 백엔드 간의 스펙 공유였다. 사람이 많은 팀이 아니다 보니 백엔드 API 서버를 만든 사람이 프론트엔드 웹 클라이언트도 만드는 경우가 다반사였기 때문에 문서로 정리하여 공유를 하지 않아도 큰 문제가 없는 것 같아 보였다.</description>
    </item>
    
    <item>
      <title>202111 | 우리 입맛대로 블록체인 다루기</title>
      <link>https://hadooboo.github.io/posts/mils/202111/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202111/</guid>
      <description>저번 달 업무였던 Blockcerts 프로토타입이 이어져 계속해서 블록체인 인증과 관련된 서비스 쪽으로 프로젝트 방향이 잡혔다. Blockcerts의 개념은 의미가 있었지만, 제공하는 라이브러리들의 복잡성도 크지 않았으며 우리가 직접 구현해도 조금의 시간만 더 걸릴 뿐 못할 수준이 아니었다. 특히나 django framework를 사용할 수 있는 것이 나밖에 없다는 것도 결국 우리 팀이 직접 구현해야하겠다는 방향으로 이어지는 요인이 되었다.
이를 위해서는 high-level에서만 이해하고 있던 블록체인 네트워크들이 어떤 방식으로 구현되어 있고 어떻게 상호작용할 수 있을지 공부하는 것이 필수적이었다.</description>
    </item>
    
    <item>
      <title>202110 | 프로토타입</title>
      <link>https://hadooboo.github.io/posts/mils/202110/</link>
      <pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202110/</guid>
      <description>이번 10월 한 달 동안 가장 힘들게 하고 많이 들었던 단어가 프로토타입이다. 이전 프로젝트가 마무리되고 다음 작업으로 진행하기 전 전반적인 기술 동향을 살피고 구현해볼만 한 가치가 있는 아이템에 대해 간단한 프로토타입을 만드는 시간을 가진다. 여러 아이템 중에서도 가장 기억에 남는 것은 Blockcerts를 이용하여 간단한 블록체인 기반 인증 시스템을 만드는 작업이었다.
Blockcerts는 MIT에서 만든 블록체인 인증에 있어서의 공개 표준의 역할을 하는 라이브러리이며 실제 MIT 전자졸업장을 이를 이용하여 발행하고 있다고 한다. 백엔드 서버를 위한 python 라이브러리, 프론트엔드 구현을 위한 js 라이브러리, android 및 ios 클라이언트 모두를 오픈소스로 공개하여 우리 입맛에 맞게 쉽게 사용할 수 있다.</description>
    </item>
    
    <item>
      <title>202109 | 외부 API와 함께 작업하기</title>
      <link>https://hadooboo.github.io/posts/mils/202109/</link>
      <pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202109/</guid>
      <description>대학교에 들어와서 1학년 1학기에 첫 전공 수업에서 배운 것은 abstraction였다. 교수님께서는 컴퓨터공학이 이렇게까지 발전할 수 있었던 것은 추상화 덕분이라고 말씀하셨다. 우리가 하위 계층에 대해 정확하게 알고 구현할 수 없을지라도 추상화를 통해 그 동작을 사용할 수 있으며 우리가 만든 것이 동시에 상위 계층에 추상화를 제공하곤 한다.
소프트웨어 개발을 하면서도 다양한 곳에서 추상화와 관련된 개념을 마주하게 되는 것 같다. 모듈을 인터페이스화해서 구현하는 것, 외부 API를 이용하는 것 등등이 있다. 그 동안의 개발 경험을 통해 추상화에는 병렬적이고 빠른 개발, 쉬운 플러그인과 같은 여러 강점이 존재함을 알게 되었다.</description>
    </item>
    
    <item>
      <title>202108 | 가장 최신 기술을 알아간다는 것</title>
      <link>https://hadooboo.github.io/posts/mils/202108/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202108/</guid>
      <description>IT 기술은 계속해서 빠르게 변해가고 개발자는 항상 새로운 내용을 공부해야 한다는 내용을 여기저기서 많이 들어왔고 느껴왔다. 그래도 학교 공부를 할 때와 지금까지의 인턴 및 회사 생활에서는 누군가가 미리 정리해 놓은 내용이 있거나 가르쳐주는 사람이 있었기에 방향성이 쉽게 보였고 할 만했다. 그러나 이번에 회사에서 비트코인 탭루트 업그레이드에 대해 조사하고 발표를 준비하면서 가장 최신의 기술을 알아간다는 것이 매우 까다로운 일임을 알게 되었다.
비트코인 탭루트는 올해 11월 적용 예정인 소프트포크로서 2017년의 세그윗 소프트포크에 이은 두 번째 대규모 업그레이드라고 한다.</description>
    </item>
    
    <item>
      <title>202107 | 답이 없는 상황</title>
      <link>https://hadooboo.github.io/posts/mils/202107/</link>
      <pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202107/</guid>
      <description>초중고 교육과정을 거치며, 대학교에서 컴퓨터공학을 전공하며 내가 수강했던 대부분의 수업에서는 답이 정해져 있는 상황에서 누가 더 정답을 많이 맞추느냐로 성적이 결정되었다. 특히 컴퓨터공학 수업에서는 과제조차도 정해진 input output 사이에서 점수가 절대적으로 매겨졌기 때문에 교수님 마음대로가 평가의 기준이었던 다른 학과의 친구들은 이 점을 부러워하기도 하였다.
그러나 회사에 들어와보니 프로그램을 만드는 과정에서 말 그대로 답이 없는 상황을 마주하게 되었다. 가장 큰 문제는 완성도와 산출물 사이에서의 저울질이었다. 분명 좋은 서비스를 만들기 위해서는 코드의 품질을 올리고 더 많은 테스트케이스를 만드는 등 해야 할 작업이 산더미같이 많이 있었지만, 인력 및 시간의 한계와 비즈니스적인 목적으로 인해 중간에서 끊고 데모와 배포를 실행하여야 하는 시점이 더러 있었다.</description>
    </item>
    
    <item>
      <title>202106 | Standalone to multiuser service</title>
      <link>https://hadooboo.github.io/posts/mils/202106/</link>
      <pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202106/</guid>
      <description>어느 정도 go의 문법과 사용 사례를 익힌 뒤 처음으로 팀에서 참여하게 된 업무는 그 동안 standalone 모드에서 실행해 왔던 서비스를 multiuser 서비스로 확장시키는 작업이었다. Standalone 방식은 사용자마다 VM을 한 대씩 할당하여 전용 프로그램을 돌리는 것이었는데 사내 직원들을 대상으로 하는 서비스였기에 가능했다.
Standalone의 문제점은 두 가지가 있었다. 가장 큰 문제는 유지보수가 어렵다는 것이었다. 프로그램을 업데이트 하려고 할 때 모든 VM에 들어가서 새로 실행하고 빠져나오기를 반복해야 했다. 또한 로그 수집 과정도 복잡했으며, 새로 유저를 추가하려고 할 때도 VM 세팅부터 할 일이 많았다.</description>
    </item>
    
    <item>
      <title>202105 | Spring 세계가 깨어지는 경험</title>
      <link>https://hadooboo.github.io/posts/mils/202105/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/posts/mils/202105/</guid>
      <description>아무 생각 없이 살아가다 보면 점점 새로운 것을 시도해보려고 하지 않게 되는 것이 인간의 습성이라고 생각한다. 마치 멈춰져 있는 바퀴를 굴리기 위해서는 더 많은 힘이 드는 것처럼. 내게도 spring이라는 세상이 그러하였고, 그게 마냥 답인 줄 알았다.
네이버에서 2번의 인턴 활동을 하며 백엔드 서버는 모두 spring boot으로 만들었다. 두 번에서 모두 기본적인 API 서비스 제공이 목표였고 실제 운영으로 이어지기 전 단계였으므로 spring boot에서 부족함을 느낄 수 없었다. 학교에서 수업을 들을 때에도 대부분 java 언어로 배워왔기에, 다른 언어로 다른 프레임워크로 서버를 만드는 것이 아직은 시기상조라는 생각을 막연히 가지게 되었다.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hadooboo.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hadooboo.github.io/about/</guid>
      <description>Experience Samjung Data Service Co., Ltd. 2021. 04. - now
Software Engineer. Developing backend service for new business items.
기존에 존재하던 사내 시스템 A를 서비스형 소프트웨어로 업그레이드하여 사용자 한 명당 vm을 한 대씩 할당해주던 구조에서 vm 한 대로 모든 요청을 처리할 수 있도록 하였습니다. 저는 아키텍처를 새로 설계하고 기존 standalone 모델을 이용하여 재공학하는 역할을 맡았습니다. 공증이 필요한 상황에서 공증 내용을 블록체인에 기록하여 적은 비용, 빠른 속도, 높은 신뢰도로 무결성을 확인할 수 있도록 돕는 모듈을 개발하고 여러 도메인에 적용해보았습니다.</description>
    </item>
    
  </channel>
</rss>
