---
layout: mil
date: 1633014000
title: 프로토타입
tag: 삼정데이타서비스
permalink: /mils/202110
---

이번 10월 한 달 동안 가장 힘들게 하고 많이 들었던 단어가 프로토타입이다. 이전 프로젝트가 마무리되고 다음 작업으로 진행하기 전 전반적인 기술 동향을 살피고 구현해볼만 한 가치가 있는 아이템에 대해 간단한 프로토타입을 만드는 시간을 가진다. 여러 아이템 중에서도 가장 기억에 남는 것은 Blockcerts를 이용하여 간단한 블록체인 기반 인증 시스템을 만드는 작업이었다.

Blockcerts는 MIT에서 만든 블록체인 인증에 있어서의 공개 표준의 역할을 하는 라이브러리이며 실제 MIT 전자졸업장을 이를 이용하여 발행하고 있다고 한다. 백엔드 서버를 위한 python 라이브러리, 프론트엔드 구현을 위한 js 라이브러리, android 및 ios 클라이언트 모두를 오픈소스로 공개하여 우리 입맛에 맞게 쉽게 사용할 수 있다.

이렇게 프로토타입 구현을 위한 아이템이 정해지고 구현을 시작했다. 첫 번째로 마주한 문제는 우리 팀의 백엔드 주력 언어는 go이지만 Blockcerts는 python 라이브러리만 제공하는 것이었다. 그래서 따로 공부했던 java spring framework, 팀의 go server skeleton code를 버리고 수업에서 잠깐 배우고 사용하였던 django framework로 백엔드 API 서버를 만들게 되었다. 그런데 놀라웠던 것은 내장된 ORM 덕분인지 go로는 1주일 정도 걸렸을 작업을 이틀 만에 끝낼 수 있었다는 것이다. 비록 대부분이 CRUD 작업이기는 했지만 말이다. 강타입 언어가 아니라는 점에서 python은 한계가 있다고 생각하지만 이렇게 빠른 주기의 프로토타입을 만드는 환경에서는 큰 쓸모가 있는 것 같다. 물론 지금까지 회사 생활 중에서 가장 집중한 이틀이기도 했다.

백엔드 API 서버는 금방 만들 수 있었지만 다음으로 마주한 문제는 그에 맞는 웹 클라이언트 개발이었다. 물론 프론트엔드 스택이 아예 없는 것은 아니지만 졸속으로 만들고 있다는 느낌을 지울 수 없었다. 시간이 없기 때문에 컴포넌트의 복붙은 종종 일어났다. 그렇지만 Clean code 책을 봐도 저자가 머리에서 리팩터링이 자동으로 돼서 처음부터 그 코드를 작성하는 것이 아니라 일단 돌아가게 구현한 다음에 리팩터링한다고 했다. 프론트엔드 코드는 프로토타입의 목표에 맞게 딱 돌아가게까지만 해 놓은 코드였다. 아쉬운 점도 있었지만 프로토타입의 역할과 코드가 생명을 가지고 있는 시간을 고려했을 때 머리로는 이해할 수 있었다. 또한, 프로토타입 단계에서 회사에서 디자이너를 배정해주지 않았기 때문에 디자인도 마음에 들지 않는 부분이 존재했다. 템플릿을 사 와서 그것을 수정하는 방법으로 해도 디자인에 대한 개념이 없으니 손을 대면 댈수록 이상해진 것 같다.

프로토타입 개발 경험을 하며 여러 가지를 느낄 수 있었다. 프로토타입은 말 그대로 완성품이 아니기 때문에 모든 방면에서 100% 완벽한 구현을 이룰 수 없지만 마음속으로는 그런 부분들에 대해 아쉬움을 많이 느끼고 있었다. 상황과 맥락에 따라서 정답이 달라지는 것을 인정하고 받아들이는 연습을 해야겠다고 생각했다. 또한, 풀스택의 의미에 대해서도 다시 한 번 생각해보게 되었다. 그전까지는 풀스택은 말도 안 되는 얘기라고 생각했었다. 그러나 풀스택을 모든 스택을 완벽하게 이해하고 사용할 수 있는 것이 아닌 전체 개발 흐름이 어떻게 이어지는지 파악할 수 있고 그 안에서 내가 맡은 스택이 무슨 역할을 하는지 이해할 수 있는 것이라고 생각한다면 모두가 풀스택이 되어야 하는 것이 아닐까 싶다.